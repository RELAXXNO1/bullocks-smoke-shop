rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/(default)/documents/users/$(request.auth.uid)) &&
        get(/databases/(default)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }
    
    function isValidFileSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB max file size
    }

    // Product images
    match /products/{category}/{imageId} {
      allow read: if true;
      allow write: if isAdmin() && isImage() && isValidFileSize();
    }

    // Layout assets
    match /layout/{category}/{imageId} {
      allow read: if true;
      allow write: if isAdmin() && isImage() && isValidFileSize();
    }

    // Photo bank
    match /photobank/{category}/{imageId} {
      allow read: if true;
      allow write: if isAuthenticated() && isImage() && isValidFileSize();
    }

    // Marketing assets
    match /marketing/{category}/{imageId} {
      allow read: if true;
      allow write: if isAdmin() && isImage() && isValidFileSize();
    }

    // Catch-all rule - deny everything else
    match /{allPaths=**} {
      allow read, write: if false;
    }
  }
}